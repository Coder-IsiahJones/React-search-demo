{"version":3,"sources":["components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["SearchBar","props","useState","searchValue","setSearchValue","shouldDisplayButton","length","filteredProducts","products","filter","product","includes","type","value","onChange","event","target","onClick","map","App","productsState","setProductsState","useEffect","fetch","then","res","json","productsArray","newProductsState","title","hasProducts","reachContentRoot","document","getElementById","ReactDom","render"],"mappings":"wKAqCeA,EAlCG,SAACC,GACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUMC,EAAsBF,EAAYG,OAAS,EAG3CC,EAAmBN,EAAMO,SAASC,QAAO,SAACC,GAC9C,OAAOA,EAAQC,SAASR,MAG1B,OACE,gCAEE,uBAAOS,KAAK,OAAOC,MAAOV,EAAaW,SAlBjB,SAACC,GACzBX,EAAeW,EAAMC,OAAOH,UAoBzBR,GAAuB,wBAAQY,QAjBX,WACvBb,EAAe,KAgBW,mBAGvBG,EAAiBW,KAAI,SAACR,GACrB,OAAO,6BAAmBA,GAAVA,UCFTS,EA1BH,WACV,MAA0CjB,mBAAS,IAAnD,mBAAOkB,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,MAAM,qCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAmBD,EAAcT,KAAI,SAACR,GAC1C,OAAOA,EAAQmB,SAEjBR,EAAiBO,QAEpB,IAEH,IAAME,EAAcV,EAAcd,OAAS,EAE3C,OACE,8BAIGwB,EAAc,cAAC,EAAD,CAAWtB,SAAUY,IAAoB,gBCpBxDW,EAAmBC,SAASC,eAAe,QAEjDC,IAASC,OAAO,cAAC,EAAD,IAASJ,I","file":"static/js/main.a86f3ffd.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./SearchBar.css\"\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const shouldDisplayButton = searchValue.length > 0\r\n\r\n  // Search Filter\r\n  const filteredProducts = props.products.filter((product) => {\r\n    return product.includes(searchValue)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {/* User Input */}\r\n      <input type='text' value={searchValue} onChange={handleInputChange} />\r\n\r\n      {/* Display clear when text is entered */}\r\n      {shouldDisplayButton && <button onClick={handleClearClick}>Clear</button>}\r\n\r\n      {/* List Products */}\r\n      {filteredProducts.map((product) => {\r\n        return <li key={product}>{product}</li>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useState, useEffect } from \"react\"\r\nimport SearchBar from \"./SearchBar/SearchBar\"\r\n\r\nconst App = () => {\r\n  const [productsState, setProductsState] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((productsArray) => {\r\n        const newProductsState = productsArray.map((product) => {\r\n          return product.title\r\n        })\r\n        setProductsState(newProductsState)\r\n      })\r\n  }, [])\r\n\r\n  const hasProducts = productsState.length > 0\r\n\r\n  return (\r\n    <div>\r\n      {/* <SearchBar products={productsState} /> */}\r\n\r\n      {/* Conditional loading */}\r\n      {hasProducts ? <SearchBar products={productsState} /> : \"Loading...\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDom from \"react-dom\"\nimport App from \"./components/App\"\n\nconst reachContentRoot = document.getElementById(\"root\")\n\nReactDom.render(<App />, reachContentRoot)\n"],"sourceRoot":""}